package ua.lviv.lgs.controller;import org.hibernate.ObjectNotFoundException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.util.StringUtils;import org.springframework.validation.BindingResult;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.servlet.ModelAndView;import ua.lviv.lgs.common.UniversityService;import ua.lviv.lgs.common.UserService;import ua.lviv.lgs.dao.FacultyRepository;import ua.lviv.lgs.dao.SubjectRepository;import ua.lviv.lgs.dao.UnivercityRepository;import ua.lviv.lgs.dao.UserRepository;import ua.lviv.lgs.domain.Faculty;import ua.lviv.lgs.domain.Subject;import ua.lviv.lgs.domain.Univercity;import ua.lviv.lgs.domain.User;import javax.naming.Binding;import java.util.*;@Controllerpublic class UniversityController {    @Autowired    private UniversityService universityService;    @Autowired    private UnivercityRepository univercityRepository;    @Autowired    private UserRepository userRepository;    @Autowired    private FacultyRepository facultyRepository;    @Autowired    private SubjectRepository subjectRepository;    @RequestMapping(value = "/universities", method = RequestMethod.GET)    public ModelAndView init() throws Exception {        ModelAndView mav = new ModelAndView("universities");        mav.addObject("universities", universityService.readAll());        return mav;    }    @RequestMapping(value = "/addUniversity", method = RequestMethod.GET)    public ModelAndView addModel(Model model) {        ModelAndView mav = new ModelAndView();        mav.addObject("faculties",facultyRepository.findAll());        return mav;    }    @RequestMapping(value = "/addProcessing", method = RequestMethod.GET)    public ModelAndView addUnivercity(@RequestParam("name") String name,                                      @RequestParam("description") String description) throws Exception {        Univercity univercity = new Univercity();        univercity.setName(name);        univercity.setDescription(description);        universityService.save(univercity);        return new ModelAndView("redirect:/universities");    }    @RequestMapping(value = "/universityPage", method = RequestMethod.GET)    public ModelAndView mainPage(@RequestParam(name = "id") Integer id) {        ModelAndView modelAndView = new ModelAndView();        modelAndView.addObject("data", universityService.findById(id));        modelAndView.addObject("faculty", facultyRepository.findAllByUniversityId(id));        return modelAndView;    }    @RequestMapping(value = "/sendMyMarks", method = RequestMethod.GET)    public ModelAndView sendMarks(@RequestParam("userName") String name) {        UserService userService = new UserService();        User user = userRepository.findByEmail(name).get();        return new ModelAndView("redirect:/");    }    @RequestMapping(value = "/edit", method = RequestMethod.GET)    public ModelAndView map(Model model, @RequestParam("id") Integer id) {        ModelAndView map = new ModelAndView();        map.addObject("currentUniversity", univercityRepository.findById(id).get());        map.addObject("availableFaculties", facultyRepository.findAll());        return map;    }}